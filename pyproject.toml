[project]
name = "vibecore"
version = "0.3.0"
description = "Build your own AI-powered automation tools in the terminal with this extensible agent framework"
readme = "README.md"
authors = [
    { name = "Sung-jin Brian Hong", email = "serialx@serialx.net" }
]
license = { text = "MIT" }
requires-python = ">=3.11"
keywords = [
    "ai",
    "agents",
    "terminal",
    "tui",
    "textual",
    "openai",
    "anthropic",
    "claude",
    "gpt",
    "automation",
    "framework",
    "mcp",
    "model-context-protocol",
    "assistant",
    "cli",
    "tool-use",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Terminals",
    "Topic :: Text Processing :: Linguistic",
    "Typing :: Typed",
]
dependencies = [
    "ddgs>=9.5.4",
    "html2text>=2024.2.26",
    "httpx>=0.24.0",
    "litellm>=1.72.4",
    "openai-agents[litellm]>=0.2.2",
    "pydantic-settings>=2.10.1",
    "textual>=4.0.0",
    "typer>=0.14.0",
]

[project.urls]
"Homepage" = "https://github.com/serialx/vibecore"
"Repository" = "https://github.com/serialx/vibecore"
"Bug Tracker" = "https://github.com/serialx/vibecore/issues"
"Discussions" = "https://github.com/serialx/vibecore/discussions"
"Documentation" = "https://github.com/serialx/vibecore#readme"

[project.scripts]
vibecore = "vibecore.cli:cli_main"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "src/vibecore/**/*.py",
    "src/vibecore/**/*.tcss",
    "src/vibecore/**/*.txt",
    "src/vibecore/py.typed",
]

[tool.hatch.build.targets.wheel]
packages = ["src/vibecore"]

[dependency-groups]
dev = [
    "ruff>=0.8.5",
    "pyright>=1.1.394",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-mock>=3.14.1",
    "pytest-textual-snapshot>=1.0.0",
    "textual-dev>=1.7.0",
    "ipdb>=0.13.13",
]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "RUF",  # ruff-specific rules
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pyright]
include = ["**/*.py"]
exclude = ["**/__pycache__", ".venv", "venv", "build", "dist"]
pythonVersion = "3.11"
venvPath = "."
venv = ".venv"
typeCheckingMode = "standard"

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
